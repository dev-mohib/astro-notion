---
import { getPageLink } from '@lib/blog-helpers.ts'

export interface Props {
  currentPage?: number
  numberOfPages?: number
  tag ? : string
}

const { currentPage, numberOfPages, tag = '' } = Astro.props

const isFirstPage = currentPage === 1
const isLastPage = currentPage === numberOfPages

const startPage = currentPage - 2 < 1 ? 1 : currentPage - 2
const endPage =
  currentPage + 2 > numberOfPages ? numberOfPages : currentPage + 2

let pages = []
for (let i = startPage; i <= endPage; i++) {
  pages.push(i)
}
---

<div class="paginate mt-28">
  <a href={getPageLink(1, tag)} class={isFirstPage && 'inactive'}>
    <svg class="w-3.5 h-3.5 me-2 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
      <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5H1m0 0 4 4M1 5l4-4"/>
    </svg>
    Previous
  </a>
  {
    pages.map((p: number) => (
      <a href={getPageLink(p, tag)} class={p === currentPage && 'inactive'}>
        {p}
      </a>
    ))
  }
  <a href={getPageLink(numberOfPages, tag)} class={isLastPage && 'inactive'}>
    Next
    <svg class="w-3.5 h-3.5 ms-2 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
      <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
    </svg>
  </a
  >
</div>

<style>
  .paginate a{
    @apply flex items-center justify-center px-3 h-8 me-3 text-sm font-medium text-white bg-primary border border-base-200 rounded-lg hover:opacity-70 
  }
  .paginate{
    display: flex;
    width: 100%;
    margin: 0 auto;
    color: var(--fg);
    justify-content: center;
    align-items: center;
  }
  .pagination {
    display: flex;
    width: 100%;
    margin: 0 auto;
    color: var(--fg);
    justify-content: center;
    align-items: center;
  }
  .pagination a {
    display: block;
    width: 2.4rem;
    height: 3rem;
    margin: 0 0.4rem;
    border-radius: var(--radius);
    background: #f4f4f4;
    color: inherit;
    font-size: 0.85rem;
    text-align: center;
    text-decoration: underline;
    font-weight: 500;
    line-height: 3rem;
  }
  .pagination a:hover:not(.inactive) {
    background: #ddd;
  }
  .pagination a.inactive {
    color: #999;
    text-decoration: none;
  }
</style>
